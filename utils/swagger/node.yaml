components:
  # Reusable schemas (data models)
  schemas:
    # tokenInfo
    tokenInfo:
      type: object
      properties:
        name:
          type: string
          description: "토큰 이름(Name)"
          example: "Coin"
        symbol:
          type: string
          description: "토큰 심볼(Symbol)"
          example: "SYMBOL"
    # totalSupply
    totalSupply:
      type: object
      properties:
        totalSupply:
          type: integer
          description: "총 발행량(totalSupply)"
          example: "100"
    # ownerAddress
    ownerAddress:
      type: object
      properties:
        ownerAddress:
          type: string
          description: "주소(Address)"
          example: "0xf17f52151EbEF6C7334FAD080c5704D77216b732"
    # balanceOf
    balanceOf:
      type: object
      properties:
        ownerOf:
          type: integer
          description: "보유 자산(Balance)"
          example: "100"
    # tokenURI
    tokenURI:
      type: object
      properties:
        tokenURI:
          type: string
          description: "토큰 URI"
          example: "http://test.co.kr"
    # tokenId
    tokenId:
      type: object
      properties:
        tokenId:
          type: string
          description: "토큰 아이디(Token ID)"
          example: "123"
    # allTokens
    allTokens:
      type: array
      description: "토큰 리스트"
      items:
        type: object
        properties:
          tokenId:
            type: string
          tokenOwner:
            type: string
      example:
        - tokenId: "123"
        - tokenOwner: "0xf17f52151EbEF6C7334FAD080c5704D77216b732"
    # result
    result:
      type: object
      properties:
        result:
          type: bool
          description: "true/false"
          example: "true"
    # createToken
    createToken:
      type: object
      properties:
        sender:
          type: string
          description: "주소(Address)"
          example: "0xAb78d42f2C659B5bDeff87FdB227c1508e29623D"
        privateKey:
          type: string
          description: "개인키(Private Key)"
          example: "0x2d5af7250fb0ea8070efaf271954336c5cdf0029754ba156390b3269c9f4f4d1"

  # Reusable path, query, header and cookie parameters
  parameters:
    # ownerAddress
    ownerAddress:
      type: string
      description: "주소(Address)"
      example: "0xf17f52151EbEF6C7334FAD080c5704D77216b732"
    # tokenId
    tokenId:
      type: string
      description: "토큰 아이디(Token ID)"
      example: "123"
    # tokenIndex
    tokenIndex:
      type: integer
      description: "토큰 인덱스(Token Index)"
      example: "1"
    # createToken
    createToken:
      type: object
      properties:
        sender:
          type: string
          description: "토큰 발행 요청자(msg.sender)"
          example: "0xAb78d42f2C659B5bDeff87FdB227c1508e29623D"
        privateKey:
          type: string
          description: "개인키(Private Key)"
          example: "0x2d5af7250fb0ea8070efaf271954336c5cdf0029754ba156390b3269c9f4f4d1"
        tokenURI:
          type: string
          description: "토큰 URI"
          example: "http://test.co.kr"
    # approve
    approve:
      type: object
      properties:
        sender:
          type: string
          description: "요청자(msg.sender)"
          example: "0xAb78d42f2C659B5bDeff87FdB227c1508e29623D"
        privateKey:
          type: string
          description: "개인키(Private Key)"
          example: "0x2d5af7250fb0ea8070efaf271954336c5cdf0029754ba156390b3269c9f4f4d1"
        approveAddress:
          type: string
          description: "토큰 권한 허용 주소"
          example: "0xfe2e704dFbD6015536f462049588e9e805C80C00"
        tokenId:
          type: string
          description: "토큰 ID"
          example: "123"
    # safeTransferFrom
    safeTransferFrom:
      type: object
      properties:
        privateKey:
          type: string
          description: "개인키(Private Key)"
          example: "0x2d5af7250fb0ea8070efaf271954336c5cdf0029754ba156390b3269c9f4f4d1"
        sender:
          type: string
          description: "요청자(msg.sender)"
          example: "0xAb78d42f2C659B5bDeff87FdB227c1508e29623D"
        fromAddress:
          type: string
          description: "권한 허용 주소(Address)"
          example: "0xAb78d42f2C659B5bDeff87FdB227c1508e29623D"
        toAddress:
          type: string
          description: "권한 허용 주소(Address)"
          example: "0xfe2e704dFbD6015536f462049588e9e805C80C00"
        tokenId:
          type: string
          description: "토큰 ID"
          example: "123"
        callData:
          type: string
          description: "CallData"
          example: "call data sample"
    # setApprovalForAll
    setApprovalForAll:
      type: object
      properties:
        privateKey:
          type: string
          description: "개인키(Private Key)"
          example: "0x2d5af7250fb0ea8070efaf271954336c5cdf0029754ba156390b3269c9f4f4d1"
        sender:
          type: string
          description: "요청자(msg.sender)"
          example: "0xAb78d42f2C659B5bDeff87FdB227c1508e29623D"
        operator:
          type: string
          description: "권한 허용 주소(Address)"
          example: "0xfe2e704dFbD6015536f462049588e9e805C80C00"
        approved:
          type: bool
          description: "설정 권한(true/false)"
          example: "true"

  # Security scheme definitions (see Authentication)
  # securitySchemes:
  #   ...

  # Reusable request bodies
  # requestBodies:
  #   ...

  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  # responses:
  #   ...

  # Reusable response headers
  # headers:
  #   ...

  # Reusable examples
  # examples:
  #   ...

  # Reusable links
  # links:
  #   ...

  # Reusable callbacks
  # callbacks:
  #   ...
